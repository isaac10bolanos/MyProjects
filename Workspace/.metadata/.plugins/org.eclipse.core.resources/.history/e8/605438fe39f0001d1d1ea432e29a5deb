package www.skillstorm.general;

public class Notes {
	
	/*
	 * Class: Blueprint to define create Objects
	 * Object: Specific instance of a class, created using a class
	 * 
	 * 
	 * 4 Pillars of OOP
	 * Inheritance: creates a IS-A relationship with parent class
	 * good for code reuse, shares properties and methods from parent class to child
	 * 
	 * Encapsulation: Data hiding, provides security for your properties with private keyword
	 * you provide getter and setter methods to look at your data or change data
	 * 
	 * Abstraction: Hiding implementation details, you know something your doing is working but
	 * not necessarily how it's doing it
	 * 
	 * Polymorphism: Many forms, Inheritance comes into play here also method overloading means 
	 * taking same method name and adding or subtracting parameters to be different from original
	 * 
	 * 
	 * Public: accessible everywhere
	 * Protected: accessible within the same class or subclass and same package
	 * Default: accessible within the same class and same package
	 * Private: accessible within the same class
	 * 
	 * 
	 * Interface: properties or public static final, all methods are abstract and implemented classes
	 * must add all for it to compile, class can implement more than one interface with comma separated
	 * cannot be instantiated
	 * Abstract: can have a constructor, properties are not public static final, can have abstract methods 
	 * as well as non-abstract methods and can extend from an abstract class not implement keyword
	 * cannot be instantiated
	 * 
	 * Garbage collection: means anything Java picks up that sees it has no further use of it
	 * if some data is stored into a primitive and that gets changed to null what ever data it was holding
	 * is no longer in use and is eligible for garbage collection
	 * 
	 * Static: means it belongs to the class itself, properties and methods that are static belong to the class
	 * shared between all instances of an object
	 * 
	 * Arrays: 
	 * 
	 * 
	 * 
	 * 
	 * 
	 * 
	 * 
	 */

}
